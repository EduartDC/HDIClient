@model AseguradoraApp.Models.DriverClient

@{
    ViewData["title"] = "RegisterDriver";
}
<head>
    <link rel="stylesheet" href="~/css/registerDriver.css" />

</head>

<div class="background-image container-fluid">
    <div class="conteiner card bg-dark text-white">
        <h2 class="h2">Formulario de registro</h2>
        <br />
        <br />
        <form id="info" asp-action="RegisterNewDriver" onsubmit="validatePassword(event)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <h3 class="h3">Nombre</h3>
                <input asp-for="DriverName" type="text" class="form-control form-control-lg col-md-1" />
                <span asp-validation-for="DriverName" class="text-danger"></span>
            </div>

            <br />
            <div>
                <h3 class="h3">Apellido</h3>
                <input asp-for="DriverLastname" class="form-control form-control-lg col-md-1">
                <span asp-validation-for="DriverLastname" class="text-danger"></span>
            </div>

            <br />
            <div>
                <h3 class="h3">Fecha de nacimiento</h3>
                <input asp-for="DriverBirthday" type="date" class="form-control form-control-lg col-md-1" id="fecha" name="fecha">
                <span asp-validation-for="DriverBirthday" class="text-danger"></span>
            </div>

            <br />
            <div>
                <h3 class="h3">Numero de licencia de conducir</h3>
                <input asp-for="License" type="text" class="form-control form-control-lg col-md-1" maxlength="20">
                <span asp-validation-for="License" class="text-danger"></span>
            </div>

            <br />
            <div>
                <h3 class="h3">Numero telefonico</h3>
                <input asp-for="TelephoneNumber" type="tel" class="form-control form-control-lg col-md-1" maxlength="10" pattern="\d*">
                <span asp-validation-for="TelephoneNumber" class="text-danger"></span>
            </div>

            <br />
            <div>
                <h3 class="h3" >contraseña</h3>
                <input id="inputPassword" asp-for="DriverPassword" type="password" class="form-control form-control-lg col-md-1">
                <span asp-validation-for="DriverPassword" class="text-danger"></span>
            </div>

            <br />
            <div>
                <h3 class="h3" >Repite la contraseña</h3>
                <input id="inputRepeatPassword" type="password" class="form-control form-control-lg col-md-1" placeholder="repite tu contraseña">
            </div>

            <br />
            <div class="align-items-center">

                @*<button type="" onclick="alertSweet()" class="btn btn-dark">Cerrar</button>*@
                <button type="submit" value="Register" class="btn btn-outline-light btn-lg px-5">Crear cuenta</button>

            </div>
        </form>




    </div>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        <script>
          
            function mostrarMensajeSucces(mensaje) {
                Swal.fire({
                    icon: "success",
                    text: mensaje
                });
            }

            function mostrarMensajeError(mensaje) {
                Swal.fire({
                    icon: "error",
                    text: mensaje
                });
            }

            function validatePassword(e) {
                e.preventDefault();

                var passwordElement = document.getElementById("inputPassword");
                var repeatPasswordElement = document.getElementById("inputRepeatPassword");

                // Comprobar si los elementos existen
                if (passwordElement && repeatPasswordElement) {
                    var passwordValue = passwordElement.value;
                    var repeatPasswordValue = repeatPasswordElement.value;

                    if (passwordValue === repeatPasswordValue) {
                        const formElement = document.getElementById('info');
                        formElement.submit();
                    } else {
                        mostrarMensajeError('Las contraseñas no coinciden');
                    }
                } else {
                    mostrarMensajeError('No se encontraron elementos de contraseña en el formulario.');
                }
            }
            
            // Verificar TempData para mostrar mensajes
            @if (TempData.ContainsKey("RegistroExitoso") && (bool)TempData["RegistroExitoso"])
            {
                <text>
                    mostrarMensajeSuccess('Registro exitoso');
                </text>
            }
            else if (TempData.ContainsKey("ErrorLicenciaExistente") && (bool)TempData["ErrorLicenciaExistente"])
            {
                <text>
                    mostrarMensajeError('Licencia registrada por otro usuario');
                </text>
            }
            else if (TempData.ContainsKey("ErrorConexion") && (bool)TempData["ErrorConexion"])
            {
                <text>
                    mostrarMensajeError('Error de conexion');
                </text>
            }

            
        </script>
       
    }
}
@if (TempData["ErrorMessage"] != null)
{
    
    <script>
        console.log("adsdasdasd");
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: '@TempData["ErrorMessage"]'
        });
    </script>
}


